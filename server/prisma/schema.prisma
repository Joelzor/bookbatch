// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  batches   Batch[]
  posts     Post[]
  comments  Comment[]
  profile   Profile?
}

model Profile {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  bio        String
  profileImg String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
}

model Batch {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  books     Book[]
  posts     Post[]
  tags      Tag[]
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  body      String
  User      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  comments  Comment[]
  Batch     Batch?    @relation(fields: [batchId], references: [id])
  batchId   Int?
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
}

model Tag {
  id        Int      @id @default(autoincrement())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Batch     Batch?   @relation(fields: [batchId], references: [id])
  batchId   Int?
}

model Book {
  id        Int      @id @default(autoincrement())
  title     String
  author    String
  cover     String?
  year      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  batches   Batch[]
}
