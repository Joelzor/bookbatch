// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  batches   Batch[]   @relation(name: "batches")
  posts     Post[]
  comments  Comment[]
  profile   Profile?
  saved     Batch[]
}

model Profile {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  bio        String
  profileImg String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
}

model Batch {
  id        Int      @id @default(autoincrement())
  title     String   @default("My batch")
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(name: "batches", fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?
  books     Book[]
  post      Post?
  tags      Tag[]
  savedTo   User[]
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  body      String
  User      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  comments  Comment[]
  batch     Batch?    @relation(fields: [batchId], references: [id])
  batchId   Int?      @unique
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
}

model Tag {
  id        Int      @id @default(autoincrement())
  title     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  batches   Batch[]
}

model Book {
  id            Int      @id @default(autoincrement())
  title         String
  author        String?
  cover         String?
  yearPublished String?
  pageCount     Int?
  googleId      String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  batches       Batch[]
}
